***********************************;
*** Begin Scoring Code for Neural;
***********************************;
DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
 _DM_BAD = 0;
 _NOCL_ = .;
 _MAX_ = .;
 _MAXP_ = .;
 _SUM_ = .;
 _NTRIALS = .;
 _EPS =                1E-10;
LENGTH _WARN_ $4
;
      label S_x1 = 'Standard: x1' ;

      label S_x2 = 'Standard: x2' ;

      label H101 = 'Hidden: H1=1' ;

      label H102 = 'Hidden: H1=2' ;

      label H103 = 'Hidden: H1=3' ;

      label H104 = 'Hidden: H1=4' ;

      label H105 = 'Hidden: H1=5' ;

      label H106 = 'Hidden: H1=6' ;

      label H107 = 'Hidden: H1=7' ;

      label H108 = 'Hidden: H1=8' ;

      label H109 = 'Hidden: H1=9' ;

      label H110 = 'Hidden: H1=10' ;

      label H111 = 'Hidden: H1=11' ;

      label H112 = 'Hidden: H1=12' ;

      label H113 = 'Hidden: H1=13' ;

      label H114 = 'Hidden: H1=14' ;

      label H115 = 'Hidden: H1=15' ;

      label H116 = 'Hidden: H1=16' ;

      label H117 = 'Hidden: H1=17' ;

      label H118 = 'Hidden: H1=18' ;

      label H119 = 'Hidden: H1=19' ;

      label H120 = 'Hidden: H1=20' ;

      label H121 = 'Hidden: H1=21' ;

      label H122 = 'Hidden: H1=22' ;

      label H123 = 'Hidden: H1=23' ;

      label H124 = 'Hidden: H1=24' ;

      label H125 = 'Hidden: H1=25' ;

      label H126 = 'Hidden: H1=26' ;

      label H127 = 'Hidden: H1=27' ;

      label H128 = 'Hidden: H1=28' ;

      label H129 = 'Hidden: H1=29' ;

      label H130 = 'Hidden: H1=30' ;

      label P_hat = 'Predicted: hat' ;

      label R_hat = 'Residual: hat' ;

      label  _WARN_ = "Warnings";

*** *************************;
*** Checking missing input Interval
*** *************************;

IF NMISS(
   x1 ,
   x2   ) THEN DO;
   SUBSTR(_WARN_, 1, 1) = 'M';

   _DM_BAD = 1;
END;
*** *************************;
*** Writing the Node intvl ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   S_x1  =                    0 +     0.32991443953692 * x1 ;
   S_x2  =                    0 +     0.32991443953692 * x2 ;
END;
ELSE DO;
   IF MISSING( x1 ) THEN S_x1  = . ;
   ELSE S_x1  =                    0 +     0.32991443953692 * x1 ;
   IF MISSING( x2 ) THEN S_x2  = . ;
   ELSE S_x2  =                    0 +     0.32991443953692 * x2 ;
END;
*** *************************;
*** Writing the Node H1 ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   H101  =    -0.74170497833976 * S_x1  +    -0.78196451534516 * S_x2 ;
   H102  =     1.57786482667544 * S_x1  +    -0.12971421577645 * S_x2 ;
   H103  =    -0.42026540790113 * S_x1  +     -0.7100882736825 * S_x2 ;
   H104  =    -0.05743368807671 * S_x1  +    -0.91430707767467 * S_x2 ;
   H105  =     0.58643280091561 * S_x1  +    -0.37224957050692 * S_x2 ;
   H106  =     1.35335925667227 * S_x1  +    -1.52069227333438 * S_x2 ;
   H107  =    -0.37919497138115 * S_x1  +     0.44455640871531 * S_x2 ;
   H108  =      0.0341216114177 * S_x1  +     -1.3440074965917 * S_x2 ;
   H109  =    -1.63892151153959 * S_x1  +       1.409449668841 * S_x2 ;
   H110  =      1.3920818399396 * S_x1  +     1.80249338911381 * S_x2 ;
   H111  =     0.99608134235387 * S_x1  +     0.00595974189419 * S_x2 ;
   H112  =    -1.13199337827096 * S_x1  +    -0.04956628335593 * S_x2 ;
   H113  =     0.24512447915343 * S_x1  +     0.08685695392599 * S_x2 ;
   H114  =     0.65648800321395 * S_x1  +    -0.38746295503904 * S_x2 ;
   H115  =     0.72576886415446 * S_x1  +    -0.71704573050911 * S_x2 ;
   H116  =    -0.09988080711133 * S_x1  +     0.89535811149614 * S_x2 ;
   H117  =     -0.5821662119159 * S_x1  +    -0.63852721005801 * S_x2 ;
   H118  =    -0.18951103164506 * S_x1  +    -0.85938838663504 * S_x2 ;
   H119  =    -1.57243528919565 * S_x1  +     0.63487016423428 * S_x2 ;
   H120  =     0.16568760040457 * S_x1  +     0.97623380694705 * S_x2 ;
   H121  =     1.12207453210579 * S_x1  +    -0.63930071743752 * S_x2 ;
   H122  =    -0.52739419386391 * S_x1  +     0.32943713312683 * S_x2 ;
   H123  =     0.84887341480731 * S_x1  +    -0.11565728614891 * S_x2 ;
   H124  =     1.51172498669286 * S_x1  +     0.64180845227386 * S_x2 ;
   H125  =    -0.08474888624926 * S_x1  +     -1.4776378151819 * S_x2 ;
   H126  =      -0.292486922134 * S_x1  +     0.71199025783505 * S_x2 ;
   H127  =     1.68400354722707 * S_x1  +     1.77454397935361 * S_x2 ;
   H128  =    -1.08092648347407 * S_x1  +     -1.3978493804418 * S_x2 ;
   H129  =    -1.14325014638829 * S_x1  +     0.97173177064309 * S_x2 ;
   H130  =      1.2879153080047 * S_x1  +    -0.27020525794716 * S_x2 ;
   H101  =    -1.30876883574461 + H101 ;
   H102  =     2.59784648912792 + H102 ;
   H103  =     0.03399251759501 + H103 ;
   H104  =     -1.4043535889353 + H104 ;
   H105  =     0.17085574661366 + H105 ;
   H106  =     1.98155303116344 + H106 ;
   H107  =     0.85804821573821 + H107 ;
   H108  =     0.66144489208241 + H108 ;
   H109  =     2.48821818919052 + H109 ;
   H110  =     -2.2981447725378 + H110 ;
   H111  =    -1.27085079335056 + H111 ;
   H112  =     1.85609548288607 + H112 ;
   H113  =     0.39717276162809 + H113 ;
   H114  =     0.11703256054513 + H114 ;
   H115  =    -0.51886951178446 + H115 ;
   H116  =      1.2028126903172 + H116 ;
   H117  =     0.17825490932452 + H117 ;
   H118  =     1.15401393739675 + H118 ;
   H119  =    -0.46255825745375 + H119 ;
   H120  =    -1.49102165780701 + H120 ;
   H121  =     1.12970032667042 + H121 ;
   H122  =     0.16346424388892 + H122 ;
   H123  =     0.33982104205889 + H123 ;
   H124  =    -1.73002850215499 + H124 ;
   H125  =     -1.0338360924536 + H125 ;
   H126  =     0.25505353135029 + H126 ;
   H127  =     2.75451261885231 + H127 ;
   H128  =    -2.36427598164873 + H128 ;
   H129  =     2.36011303635449 + H129 ;
   H130  =     1.58662327367973 + H130 ;
   H101  = TANH(H101 );
   H102  = TANH(H102 );
   H103  = TANH(H103 );
   H104  = TANH(H104 );
   H105  = TANH(H105 );
   H106  = TANH(H106 );
   H107  = TANH(H107 );
   H108  = TANH(H108 );
   H109  = TANH(H109 );
   H110  = TANH(H110 );
   H111  = TANH(H111 );
   H112  = TANH(H112 );
   H113  = TANH(H113 );
   H114  = TANH(H114 );
   H115  = TANH(H115 );
   H116  = TANH(H116 );
   H117  = TANH(H117 );
   H118  = TANH(H118 );
   H119  = TANH(H119 );
   H120  = TANH(H120 );
   H121  = TANH(H121 );
   H122  = TANH(H122 );
   H123  = TANH(H123 );
   H124  = TANH(H124 );
   H125  = TANH(H125 );
   H126  = TANH(H126 );
   H127  = TANH(H127 );
   H128  = TANH(H128 );
   H129  = TANH(H129 );
   H130  = TANH(H130 );
END;
ELSE DO;
   H101  = .;
   H102  = .;
   H103  = .;
   H104  = .;
   H105  = .;
   H106  = .;
   H107  = .;
   H108  = .;
   H109  = .;
   H110  = .;
   H111  = .;
   H112  = .;
   H113  = .;
   H114  = .;
   H115  = .;
   H116  = .;
   H117  = .;
   H118  = .;
   H119  = .;
   H120  = .;
   H121  = .;
   H122  = .;
   H123  = .;
   H124  = .;
   H125  = .;
   H126  = .;
   H127  = .;
   H128  = .;
   H129  = .;
   H130  = .;
END;
*** *************************;
*** Writing the Node intervalTargets ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   P_hat  =    -0.68488341058889 * H101  +    -2.04182040160994 * H102
          +     0.06591007906628 * H103  +     0.57785288703174 * H104
          +      -0.185055189577 * H105  +     1.36201102121599 * H106
          +     0.13706001256937 * H107  +     0.64298839598328 * H108
          +     2.11354617904532 * H109  +    -1.17861986398831 * H110
          +    -0.93486872610942 * H111  +    -1.97245600789348 * H112
          +      0.3278555762363 * H113  +     0.39294978766892 * H114
          +      0.1581869153852 * H115  +     -0.7799289780087 * H116
          +    -0.11205040799655 * H117  +    -0.96209863972777 * H118
          +      0.4073684456199 * H119  +     1.55965326670552 * H120
          +     0.05871141121823 * H121  +    -0.10405416712441 * H122
          +    -0.35068526664152 * H123  +    -0.68970833330594 * H124
          +    -0.95597930541646 * H125  +    -0.18883323349161 * H126
          +     1.87862500923314 * H127  +     1.60831184766567 * H128
          +    -1.74181074315798 * H129  +     0.85575591861149 * H130 ;
   P_hat  =     1.43766022214901 + P_hat ;
END;
ELSE DO;
   P_hat  = .;
END;
IF _DM_BAD EQ 1 THEN DO;
   P_hat  =    -0.27662261117926;
END;
*** *****************************;
*** Writing the Residuals  of the Node intervalTargets ;
*** ******************************;
IF MISSING( hat ) THEN R_hat  = . ;
ELSE R_hat  = hat  - P_hat ;
********************************;
*** End Scoring Code for Neural;
********************************;
drop
H101
H102
H103
H104
H105
H106
H107
H108
H109
H110
H111
H112
H113
H114
H115
H116
H117
H118
H119
H120
H121
H122
H123
H124
H125
H126
H127
H128
H129
H130
;
drop S_:;

*************************************;
*** begin scoring code for regression;
*************************************;

length _WARN_ $4;
label _WARN_ = 'Avisos' ;

length I_DEFAULT $ 10;
label I_DEFAULT = 'Into: DEFAULT' ;
*** Target Values;
array SCORECARD2DRF [2] $10 _temporary_ ('1.00' '0.00' );
label U_DEFAULT = 'Unnormalized Into: DEFAULT' ;
format U_DEFAULT COMMA10.2;
*** Unnormalized target values;
ARRAY SCORECARD2DRU[2]  _TEMPORARY_ (1 0);

*** Generate dummy variables for DEFAULT ;
drop _Y ;
label F_DEFAULT = 'From: DEFAULT' ;
length F_DEFAULT $ 10;
F_DEFAULT = put( DEFAULT , COMMA10.2 );
%DMNORMIP( F_DEFAULT )
if missing( DEFAULT ) then do;
   _Y = .;
end;
else do;
   if F_DEFAULT = '0.00'  then do;
      _Y = 1;
   end;
   else if F_DEFAULT = '1.00'  then do;
      _Y = 0;
   end;
   else do;
      _Y = .;
   end;
end;

drop _DM_BAD;
_DM_BAD=0;

*** Check WOE_AGE for missing values ;
if missing( WOE_AGE ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check WOE_INCOME for missing values ;
if missing( WOE_INCOME ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check WOE_ACTIVE for missing values ;
if missing( WOE_ACTIVE ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check WOE_AVGEXP for missing values ;
if missing( WOE_AVGEXP ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check WOE_CUR_ADD for missing values ;
if missing( WOE_CUR_ADD ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
*** If missing inputs, use averages;
if _DM_BAD > 0 then do;
   _P0 = 0.1091641131;
   _P1 = 0.8908358869;
   goto SCORECARD2DR1;
end;

*** Compute Linear Predictor;
drop _TEMP;
drop _LP0;
_LP0 = 0;

***  Effect: WOE_AGE ;
_TEMP = WOE_AGE ;
_LP0 = _LP0 + (   -0.52908954012704 * _TEMP);

***  Effect: WOE_INCOME ;
_TEMP = WOE_INCOME ;
_LP0 = _LP0 + (   -0.56458182415122 * _TEMP);

***  Effect: WOE_ACTIVE ;
_TEMP = WOE_ACTIVE ;
_LP0 = _LP0 + (    -0.8940388568741 * _TEMP);

***  Effect: WOE_AVGEXP ;
_TEMP = WOE_AVGEXP ;
_LP0 = _LP0 + (    -0.9384961354319 * _TEMP);

***  Effect: WOE_CUR_ADD ;
_TEMP = WOE_CUR_ADD ;
_LP0 = _LP0 + (   -0.56920325403814 * _TEMP);

*** Naive Posterior Probabilities;
drop _MAXP _IY _P0 _P1;
_TEMP =    -2.09104260669356 + _LP0;
if (_TEMP < 0) then do;
   _TEMP = exp(_TEMP);
   _P0 = _TEMP / (1 + _TEMP);
end;
else _P0 = 1 / (1 + exp(-_TEMP));
_P1 = 1.0 - _P0;

SCORECARD2DR1:

*** Residuals;
if (_Y = .) then do;
   R_DEFAULT1_00 = .;
   R_DEFAULT0_00 = .;
end;
else do;
    label R_DEFAULT1_00 = 'Residual: DEFAULT=1.00' ;
    label R_DEFAULT0_00 = 'Residual: DEFAULT=0.00' ;
   R_DEFAULT1_00 = - _P0;
   R_DEFAULT0_00 = - _P1;
   select( _Y );
      when (0)  R_DEFAULT1_00 = R_DEFAULT1_00 + 1;
      when (1)  R_DEFAULT0_00 = R_DEFAULT0_00 + 1;
   end;
end;

*** Posterior Probabilities and Predicted Level;
label P_DEFAULT1_00 = 'Predicted: DEFAULT=1.00' ;
label P_DEFAULT0_00 = 'Predicted: DEFAULT=0.00' ;
P_DEFAULT1_00 = _P0;
_MAXP = _P0;
_IY = 1;
P_DEFAULT0_00 = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
I_DEFAULT = SCORECARD2DRF[_IY];
U_DEFAULT = SCORECARD2DRU[_IY];

*************************************;
***** end scoring code for regression;
*************************************;
*------------------------------------------------------------*;
* generateScorepoints_note;
*------------------------------------------------------------*;
SCORECARD_POINTS = 0;

*------------------------------------------------------------*;
* Variable: ACTIVE;
*------------------------------------------------------------*;
if MISSING(ACTIVE) then do;
SCORECARD_POINTS = SCORECARD_POINTS + 29;
SCR_ACTIVE= 29;
end;
else if NOT MISSING(ACTIVE) AND ACTIVE < 2 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 125;
SCR_ACTIVE = 125;
end;
else if NOT MISSING(ACTIVE) and 2 <= ACTIVE AND ACTIVE < 12 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 29;
SCR_ACTIVE = 29;
end;
else if NOT MISSING(ACTIVE) and 12 <= ACTIVE AND ACTIVE < 16 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 4;
SCR_ACTIVE = 4;
end;
else if NOT MISSING(ACTIVE) and 16 <= ACTIVE AND ACTIVE < 19 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 22;
SCR_ACTIVE = 22;
end;
else if NOT MISSING(ACTIVE) and 19 <= ACTIVE then do;
SCORECARD_POINTS = SCORECARD_POINTS + 3;
SCR_ACTIVE = 3;
end;

*------------------------------------------------------------*;
* Variable: AGE;
*------------------------------------------------------------*;
if MISSING(AGE) then do;
SCORECARD_POINTS = SCORECARD_POINTS + 39;
SCR_AGE= 39;
end;
else if NOT MISSING(AGE) AND AGE < 27.58 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 39;
SCR_AGE = 39;
end;
else if NOT MISSING(AGE) and 27.58 <= AGE AND AGE < 32.58 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 31;
SCR_AGE = 31;
end;
else if NOT MISSING(AGE) and 32.58 <= AGE AND AGE < 37.25 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 22;
SCR_AGE = 22;
end;
else if NOT MISSING(AGE) and 37.25 <= AGE AND AGE < 52.42 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 26;
SCR_AGE = 26;
end;
else if NOT MISSING(AGE) and 52.42 <= AGE then do;
SCORECARD_POINTS = SCORECARD_POINTS + 21;
SCR_AGE = 21;
end;

*------------------------------------------------------------*;
* Variable: AVGEXP;
*------------------------------------------------------------*;
if MISSING(AVGEXP) then do;
SCORECARD_POINTS = SCORECARD_POINTS + 28;
SCR_AVGEXP= 28;
end;
else if NOT MISSING(AVGEXP) AND AVGEXP < 12.65 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 28;
SCR_AVGEXP = 28;
end;
else if NOT MISSING(AVGEXP) and 12.65 <= AVGEXP AND AVGEXP < 57.44 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 49;
SCR_AVGEXP = 49;
end;
else if NOT MISSING(AVGEXP) and 57.44 <= AVGEXP AND AVGEXP < 101.76 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 29;
SCR_AVGEXP = 29;
end;
else if NOT MISSING(AVGEXP) and 101.76 <= AVGEXP AND AVGEXP < 352.17 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 36;
SCR_AVGEXP = 36;
end;
else if NOT MISSING(AVGEXP) and 352.17 <= AVGEXP then do;
SCORECARD_POINTS = SCORECARD_POINTS + 15;
SCR_AVGEXP = 15;
end;

*------------------------------------------------------------*;
* Variable: CUR_ADD;
*------------------------------------------------------------*;
if MISSING(CUR_ADD) then do;
SCORECARD_POINTS = SCORECARD_POINTS + 40;
SCR_CUR_ADD= 40;
end;
else if NOT MISSING(CUR_ADD) AND CUR_ADD < 24 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 40;
SCR_CUR_ADD = 40;
end;
else if NOT MISSING(CUR_ADD) and 24 <= CUR_ADD AND CUR_ADD < 49 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 26;
SCR_CUR_ADD = 26;
end;
else if NOT MISSING(CUR_ADD) and 49 <= CUR_ADD AND CUR_ADD < 108 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 23;
SCR_CUR_ADD = 23;
end;
else if NOT MISSING(CUR_ADD) and 108 <= CUR_ADD AND CUR_ADD < 192 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 28;
SCR_CUR_ADD = 28;
end;
else if NOT MISSING(CUR_ADD) and 192 <= CUR_ADD then do;
SCORECARD_POINTS = SCORECARD_POINTS + 19;
SCR_CUR_ADD = 19;
end;

*------------------------------------------------------------*;
* Variable: INCOME;
*------------------------------------------------------------*;
if MISSING(INCOME) then do;
SCORECARD_POINTS = SCORECARD_POINTS + 31;
SCR_INCOME= 31;
end;
else if NOT MISSING(INCOME) AND INCOME < 1.8 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 41;
SCR_INCOME = 41;
end;
else if NOT MISSING(INCOME) and 1.8 <= INCOME AND INCOME < 2.06 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 27;
SCR_INCOME = 27;
end;
else if NOT MISSING(INCOME) and 2.06 <= INCOME AND INCOME < 4.8 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 31;
SCR_INCOME = 31;
end;
else if NOT MISSING(INCOME) and 4.8 <= INCOME AND INCOME < 5.48 then do;
SCORECARD_POINTS = SCORECARD_POINTS + 43;
SCR_INCOME = 43;
end;
else if NOT MISSING(INCOME) and 5.48 <= INCOME then do;
SCORECARD_POINTS = SCORECARD_POINTS + 17;
SCR_INCOME = 17;
end;
*;
* Assign SCORECARD_BIN values;
*;
if SCORECARD_POINTS < 85 then SCORECARD_BIN = 1;
else if SCORECARD_POINTS < 94 then SCORECARD_BIN = 2;
else if SCORECARD_POINTS < 103 then SCORECARD_BIN = 3;
else if SCORECARD_POINTS < 112 then SCORECARD_BIN = 4;
else if SCORECARD_POINTS < 121 then SCORECARD_BIN = 5;
else if SCORECARD_POINTS < 130 then SCORECARD_BIN = 6;
else if SCORECARD_POINTS < 139 then SCORECARD_BIN = 7;
else if SCORECARD_POINTS < 148 then SCORECARD_BIN = 8;
else if SCORECARD_POINTS < 157 then SCORECARD_BIN = 9;
else if SCORECARD_POINTS < 166 then SCORECARD_BIN = 10;
else if SCORECARD_POINTS < 175 then SCORECARD_BIN = 11;
else if SCORECARD_POINTS < 184 then SCORECARD_BIN = 12;
else if SCORECARD_POINTS < 193 then SCORECARD_BIN = 13;
else if SCORECARD_POINTS < 202 then SCORECARD_BIN = 14;
else if SCORECARD_POINTS < 211 then SCORECARD_BIN = 15;
else if SCORECARD_POINTS < 220 then SCORECARD_BIN = 16;
else if SCORECARD_POINTS < 229 then SCORECARD_BIN = 17;
else if SCORECARD_POINTS < 238 then SCORECARD_BIN = 18;
else if SCORECARD_POINTS < 247 then SCORECARD_BIN = 19;
else if SCORECARD_POINTS < 256 then SCORECARD_BIN = 20;
else if SCORECARD_POINTS < 265 then SCORECARD_BIN = 21;
else if SCORECARD_POINTS < 274 then SCORECARD_BIN = 22;
else if SCORECARD_POINTS < 283 then SCORECARD_BIN = 23;
else if SCORECARD_POINTS < 292 then SCORECARD_BIN = 24;
else SCORECARD_BIN = 25;
